<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--
       id：当前xml配置文件中唯一，建议id的值首字母小写
       class:是要创建对象的全限定名 com.baizhi.xxx
    -->
    <!--读取jdbc配置-->
    <context:property-placeholder location="classpath:/jdbc.properties"></context:property-placeholder>
    <!--创建连接池-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="password" value="${password}"></property>
        <property name="url" value="${url}"></property>
        <property name="username" value="${name}"></property>
        <property name="driverClassName" value="${driver}"></property>
    </bean>
    <!--sqlsession    起别名-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--根据包 来定义包中所有的类名  类名即别名-->
        <property name="typeAliasesPackage">
                <value>com.baizhi.entity</value>
        </property>
        <!--创建数据库连接池 获取数据库连接-->
        <property name="dataSource">
            <ref bean="dataSource"></ref>
        </property>
        <!--注册mapper文件-->
        <property name="mapperLocations">
            <list>
                <value>classpath:/mapper/*Mapper.xml</value>
            </list>
        </property>
    </bean>


    <!-- 注册实现类  给实现类注入-->
    <!-- <bean id="userService" class="com.baizhi.service.UserServiceImpl">
        <property name="userDAO">
            <ref bean="userDAO"></ref>
        </property>
    </bean> -->
    <!--创建Action对象  为Action注入 service-->
    <!--  <bean id="userAction" class="com.baizhi.action.UserAction" scope="prototype">
        <property name="userService">
            <ref bean="userService"></ref>
        </property>
    </bean>
    <bean id="loginAction" class="com.baizhi.action.UserLoginAction">
        <property name="userService">
            <ref bean="userService"></ref>
        </property>
    </bean>-->
    <!-- 获取dao对象  扫面 该包下所有的接口   类名首字母小写-->
    <bean id="scannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage">
            <value>com.baizhi.dao</value>
        </property>
    </bean>
    <!--事务控制-->
    <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--将控制交由连接池-->
        <property name="dataSource">
            <ref bean="dataSource"></ref>
        </property>
    </bean>
    <!--开启事务注解-->
    <tx:annotation-driven transaction-manager="dataSourceTransactionManager"></tx:annotation-driven>
    <!--开启 注解-->
    <context:component-scan base-package="com.baizhi.*"></context:component-scan>

</beans>